"""Match local migrations

Revision ID: 78823e9293e9
Revises: 
Create Date: 2023-05-18 11:45:28.896923

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "78823e9293e9"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic###

    # Agencies
    op.alter_column(
        "Agencies", "updatedAt", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    # PRedictions
    op.add_column(
        "Predictions",
        sa.Column(
            "eitLikelihood", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
    )
    op.add_column(
        "Predictions",
        sa.Column(
            "active", sa.Boolean(), server_default=sa.text("true"), nullable=True
        ),
    )
    op.alter_column("Predictions", "title", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("Predictions", "solNum", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "Predictions", "noticeType", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "Predictions", "createdAt", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column("Predictions", "history", server_default=sa.text("'[]'::jsonb"))

    op.create_unique_constraint(None, "Predictions", ["solNum"])
    op.drop_column("Predictions", "feedback")
    op.drop_column("Predictions", "category_list")

    # Surveys
    op.alter_column(
        "Surveys", "updatedAt", existing_type=postgresql.TIMESTAMP(), nullable=True
    )

    # Users
    op.alter_column(
        "Users", "updatedAt", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    # Agency Alias
    op.alter_column(
        "agency_alias", "agency_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "agency_alias",
        "createdAt",
        existing_type=postgresql.TIMESTAMP(),
        server_default=sa.func.now(),
        nullable=False,
    )
    op.alter_column(
        "agency_alias", "updatedAt", existing_type=postgresql.TIMESTAMP(), nullable=True
    )

    # Notice Type
    op.add_column(
        "notice_type",
        sa.Column("createdAt", sa.DateTime(), default=sa.func.now(), nullable=False),
    )
    op.add_column(
        "notice_type",
        sa.Column("updatedAt", sa.DateTime(), nullable=True, onupdate=sa.func.now()),
    )

    # Survey Responses
    op.alter_column(
        "survey_responses",
        "createdAt",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.create_index(
        op.f("ix_survey_responses_solNum"), "survey_responses", ["solNum"], unique=False
    )

    # Survey Responses Archive
    op.alter_column(
        "survey_responses_archive",
        "createdAt",
        existing_type=postgresql.TIMESTAMP(),
        server_default=sa.func.now(),
        nullable=False,
    )
    op.alter_column(
        "survey_responses_archive",
        "updatedAt",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
    )
    op.alter_column(
        "survey_responses_archive", "response", server_default=sa.text("'[]'::jsonb")
    )

    # Solcitations
    op.create_unique_constraint(None, "solicitations", ["solNum"])
    op.alter_column("solicitations", "history", server_default=sa.text("'[]'::jsonb"))
    op.alter_column("solicitations", "action", server_default=sa.text("'[]'::jsonb"))
    op.alter_column(
        "solicitations",
        "predictions",
        server_default=sa.text('\'{"value": "red", "history": []}\'::jsonb'),
    )
    op.alter_column("solicitations", "compliant", server_default=sa.text("0"))
    op.alter_column("solicitations", "active", server_default=sa.text("true"))
    op.alter_column("solicitations", "na_flag", server_default=sa.text("false"))
    op.alter_column("solicitations", "updateAt", nullable=True)

    # Attachment
    op.alter_column(
        "attachment",
        "createdAt",
        existing_type=postgresql.TIMESTAMP(),
        server_default=sa.func.now(),
        nullable=False,
    )

    # Notice
    op.alter_column(
        "notice",
        "createdAt",
        existing_type=postgresql.TIMESTAMP(),
        server_default=sa.func.now(),
        nullable=False,
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "survey_responses_archive",
        "updatedAt",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
    )
    op.drop_index(op.f("ix_survey_responses_solNum"), table_name="survey_responses")
    op.alter_column(
        "survey_responses",
        "createdAt",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_constraint(None, "solicitations", type_="unique")
    op.drop_column("notice_type", "updatedAt")
    op.drop_column("notice_type", "createdAt")
    op.alter_column("attachment", "filename", existing_type=sa.TEXT(), nullable=False)
    op.alter_column(
        "agency_alias",
        "updatedAt",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "agency_alias",
        "createdAt",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "agency_alias", "agency_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "Users", "updatedAt", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "Surveys", "updatedAt", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.add_column(
        "Predictions",
        sa.Column(
            "category_list",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "Predictions",
        sa.Column(
            "feedback",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_constraint(None, "Predictions", type_="unique")
    op.alter_column(
        "Predictions", "createdAt", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "Predictions", "noticeType", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column("Predictions", "solNum", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("Predictions", "title", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_column("Predictions", "active")
    op.drop_column("Predictions", "eitLikelihood")
    op.alter_column(
        "Agencies", "updatedAt", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    # ### end Alembic commands ###
